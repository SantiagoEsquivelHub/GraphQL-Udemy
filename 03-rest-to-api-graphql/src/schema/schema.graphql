type Query {
  "Lista de las temporadas de la Formula 1. De 1950 hasta el año actual"
  seasonsList: [Season!]!

  """
  Obtenemos la información de las carreras seleccionadas por año.
  Tener en cuenta que sólo existen temporadas desde 1950 hasta el año actual
  """
  racesByYear(year: String!): [Race!]

  "Carrera seleccionada por año y por numero de carrera."
  raceSelect(year: String!, round: Int!): Race

  """
  Lista de pilotos de la F1 de toda la historia.
  Tenemos dos opciones:
  Por un lado podemos obtener todos los pilotos
  Por otro lado, hacemos uso de la paginación y podemos limitar el número de resultados
  """
  historyDrivers(pageElements: Int, page: Int): [Driver!]!

  """
  Obtenemos la información de los pilotos seleccionados por año.
  Tener en cuenta que sólo existen temporadas desde 1950 hasta el año actual
  """
  driversYear(year: String!): [Driver!]!

  """
  Obtenemos la información de los pilotos seleccionados por año y numero de carrera.
  Tener en cuenta que sólo existen temporadas desde 1950 hasta el año actual
  """
  driversYearAndRound(year: String!, round: Int!): [Driver!]!

  "Obtenemos la información del piloto mediante el id"
  driverSelect(id: String!): Driver!

  "Obtener la clasificación general de pilotos por temporada"
  seasonPilotsRaking(year: String!): [DriverStanding!]!
}

type Mutation {
  add(value: String!): [String]
}

"Información de la temporada"
type Season {
  year: String!
  url: String!
  urlMobile: String
}

"Información de la carrera"
type Race {
  season: String!
  round: String!
  url: String!
  urlMobile: String!
  name: String!
  circuit: Circuit!
  date: String!
  time: String
}

"Información del circuito"
type Circuit {
  id: String!
  url: String!
  urlMobile: String!
  name: String!
  location: Location!
}

"Información de la ubicación"
type Location {
  lat: String!
  lng: String!
  locality: String!
  country: String!
}

"Información del piloto"
type Driver {
  id: String!
  url: String!
  urlMobile: String!
  name: String!
  dateOfBirth: String!
  nationality: String!
  code: String
  permanentNumber: String
}

"Información del constructor del piloto"
type Constructor {
  id: String!
  url: String!
  urlMobile: String!
  name: String!
  nationality: String!
}

"Información de la clasificacion del piloto"
type DriverStanding {
  position: String!
  positionText: String!
  points: String!
  wins: String!
  driver: Driver!
  constructors: [Constructor!]!
}
